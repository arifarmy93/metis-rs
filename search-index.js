var searchIndex = new Map(JSON.parse('[\
["metis",{"doc":"This crate provides a thin but idiomatic API around …","t":"FPGFIPPFPFPFSGGPPPPPIIPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFGFFPFPPPPTGPFFFFFPGKFGGPPPFPPPFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNN","n":["Dual","Err","Error","Graph","Idx","Input","InvalidGraph","InvalidGraphError","InvalidMesh","InvalidMeshError","Memory","Mesh","NOPTIONS","NewGraphError","NewMeshError","NoConstraints","NoParts","NoParts","Ok","Other","Real","Result","TooLarge","TooLarge","adjncy","as_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","drop","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","mesh_to_dual","new","new","new_unchecked","new_unchecked","option","part_dual","part_kway","part_nodal","part_recursive","set_adjwgt","set_option","set_option","set_options","set_options","set_tpwgts","set_tpwgts","set_ubvec","set_vsize","set_vsize","set_vwgt","set_vwgt","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","xadj","CCOrder","CType","Compress","Contig","Cut","DbgLvl","Edge","Fm","Greedy","Grow","INDEX","IpType","Kway","MinConn","NCuts","NIter","NSeps","No2Hop","Node","ObjType","Opt","PFactor","PType","RType","Random","Rb","Rm","Seed","Sep1Sided","Sep2Sided","Shem","UFactor","Vol","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","coarsen","conn_info","contig_info","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","info","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","ipart","move_info","refine","sep_info","time","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","value","value","value","value","value","value","value","value","value","value","value","value","value","value","value","value","value"],"q":[[0,"metis"],[130,"metis::option"],[309,"core::fmt"],[310,"core::fmt"],[311,"alloc::string"],[312,"core::any"]],"d":["The dual of a mesh.","Contains the error value","Error type returned by METIS.","Builder structure to set up a graph partition computation.","Integer type used by METIS, can either be an <code>i32</code> or an <code>i64</code>.","Input is invalid.","The input arrays are malformed and cannot be safely passed …","Error raised when the graph data fed to <code>Graph::new</code> cannot …","The input arrays are malformed and cannot be safely passed …","Error raised when the mesh data fed to <code>Mesh::new</code> cannot be …","METIS hit an out-of-memory error.","Builder structure to set up a mesh partition computation.","The length of the <code>options</code> array.","Error type returned by <code>Graph::new</code>.","Error type returned by <code>Mesh::new</code>.","<code>ncon</code> must be greater than 1.","<code>nparts</code> must be greater than 1.","<code>nparts</code> must be greater than 1.","Contains the success value","METIS returned an error but its meaning is unknown.","Floating-point type used by METIS, can either be an <code>f32</code> or …","The result of a partitioning.","Graph is too large. One of the array’s length doesn’t …","Mesh is too large. One of the array’s length doesn’t …","The adjacency array.","The adjacency index array, and the adjacency array as …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Generate the dual graph of a mesh.","Creates a new <code>Graph</code> object to be partitioned.","Creates a new <code>Mesh</code> object to be partitioned.","Creates a new <code>Graph</code> object to be partitioned (unchecked …","Creates a new <code>Mesh</code> object to be partitioned (unchecked …","Fine-tuning parameter types.","Partition the mesh using its dual graph.","Partition the graph using multilevel k-way partitioning.","Partition the mesh using its nodal graph.","Partition the graph using multilevel recursive bisection.","Sets the weights of the edges.","Sets a fine-tuning parameter for this partitioning.","Sets a fine-tuning parameter for this partitioning.","Sets the fine-tuning parameters for this partitioning.","Sets the fine-tuning parameters for this partitioning.","Sets the target partition weights for each part and …","Sets the target partition weights for each part.","Sets the load imbalance tolerance for each constraint.","Sets the communication weights of the vertices.","Sets the communication weights of the elements.","Sets the computational weights of the vertices.","Sets the computational weights of the elements.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The adjacency index array.","Specifies if the connected components of the graph should …","Specifies the matching scheme to be used during coarsening.","Specifies that the graph should be compressed by combining …","Specifies that the partitioning routines should try to …","Edge-cut minimization.","Specifies the amount of progress/debugging information …","Derives a separator from an edge cut.","FM-based cut refinement.","Greedy-based cut and volume refinement.","Grows a bisection using a greedy strategy.","Index of the option in the array from …","Determines the algorithm used during initial partitioning.","Multilevel k-way partitioning.","Specifies that the partitioning routines should try to …","Specifies the number of different partitions that it will …","Specifies the number of iterations for the refinement …","Specifies the number of different separators that it will …","Specifies that the coarsening will not perform any 2-hop …","Grow a bisection using a greedy node-based strategy.","Specifies the type of objective.","Trait implemented by METIS’ options.","Specifies the minimum degree of the vertices that will be …","Specifies the partitioning method.","Determines the algorithm used for refinement.","Compute a bisection at random followed by a refinement.","Multilevel recursive bisection.","Random matching.","Specifies the seed for the random number generator.","One-sided FM refinement.","Two-sided FM refinement.","Sorted heavy-edge matching.","Specifies the maximum allowed load imbalance among the …","Total communication volume minimization.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Displays various statistics during coarsening.","Display information related to the minimization of …","Display information related to the elimination of …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Prints various diagnostic messages.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Displays various statistics during initial partitioning.","Display detailed information about vertex moves during …","Displays various statistics during refinement.","Display detailed information about vertex separators.","Performs timing analysis.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Convert the value into metis’ format, for use with …","","","","","","","","","","","","","","","","",""],"i":[0,15,0,0,0,5,12,0,14,0,5,0,0,0,0,12,12,14,15,5,0,0,12,14,1,1,5,11,12,7,13,14,8,1,5,11,12,7,13,14,8,1,1,5,7,8,1,5,5,11,11,12,12,7,13,13,14,14,8,1,5,5,5,11,12,7,13,14,8,1,5,11,12,7,13,14,8,1,0,7,8,7,8,0,8,7,8,7,7,7,8,7,8,7,8,7,7,8,7,8,5,11,12,13,14,5,11,12,7,13,14,8,1,5,11,12,7,13,14,8,1,5,11,12,7,13,14,8,1,1,0,0,0,0,23,0,25,26,26,25,17,0,22,0,0,0,0,0,25,0,0,0,0,0,25,22,24,0,26,26,24,0,23,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,38,38,38,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,38,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,38,38,38,38,38,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,17,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,[[3,[2]]]],[1,[[4,[[3,[2]],[3,[2]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,4],[[5,5],6],[[7,7],6],[[8,8],6],[[1,1],6],[[5,9],10],[[5,9],10],[[11,9],10],[[11,9],10],[[12,9],10],[[12,9],10],[[7,9],10],[[13,9],10],[[13,9],10],[[14,9],10],[[14,9],10],[[8,9],10],[[1,9],10],[12,5],[-1,-1,[]],[14,5],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[3,[2]],[3,[2]],2],[[15,[1]]]],[[2,2,[3,[2]],[3,[2]]],[[16,[7,12]]]],[[2,[3,[2]],[3,[2]]],[[16,[8,14]]]],[[2,2,[3,[2]],[3,[2]]],7],[[2,2,[3,[2]],[3,[2]]],8],0,[[8,[3,[2]],[3,[2]]],[[15,[2]]]],[[7,[3,[2]]],[[15,[2]]]],[[8,[3,[2]],[3,[2]]],[[15,[2]]]],[[7,[3,[2]]],[[15,[2]]]],[[7,[3,[2]]],7],[[7,-1],7,17],[[8,-1],8,17],[[7,[18,[2]]],7],[[8,[18,[2]]],8],[[7,[3,[19]]],7],[[8,[3,[19]]],8],[[7,[3,[19]]],7],[[7,[3,[2]]],7],[[8,[3,[2]]],8],[[7,[3,[2]]],7],[[8,[3,[2]]],8],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[1,[[3,[2]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[-1,21,[]],[17,2],[22,2],[23,2],[24,2],[25,2],[26,2],[27,2],[28,2],[29,2],[30,2],[31,2],[32,2],[33,2],[34,2],[35,2],[36,2],[37,2],[38,2]],"c":[],"p":[[5,"Dual",0],[8,"Idx",0],[1,"slice"],[1,"tuple"],[6,"Error",0],[1,"bool"],[5,"Graph",0],[5,"Mesh",0],[5,"Formatter",309],[8,"Result",309],[5,"InvalidGraphError",0],[6,"NewGraphError",0],[5,"InvalidMeshError",0],[6,"NewMeshError",0],[8,"Result",0],[6,"Result",310],[10,"Opt",130],[1,"array"],[8,"Real",0],[5,"String",311],[5,"TypeId",312],[6,"PType",130],[6,"ObjType",130],[6,"CType",130],[6,"IpType",130],[6,"RType",130],[5,"NCuts",130],[5,"NSeps",130],[5,"NIter",130],[5,"Seed",130],[5,"MinConn",130],[5,"No2Hop",130],[5,"Contig",130],[5,"Compress",130],[5,"CCOrder",130],[5,"PFactor",130],[5,"UFactor",130],[5,"DbgLvl",130]],"b":[[47,"impl-Debug-for-Error"],[48,"impl-Display-for-Error"],[49,"impl-Display-for-InvalidGraphError"],[50,"impl-Debug-for-InvalidGraphError"],[51,"impl-Display-for-NewGraphError"],[52,"impl-Debug-for-NewGraphError"],[54,"impl-Display-for-InvalidMeshError"],[55,"impl-Debug-for-InvalidMeshError"],[56,"impl-Debug-for-NewMeshError"],[57,"impl-Display-for-NewMeshError"],[60,"impl-From%3CNewGraphError%3E-for-Error"],[62,"impl-From%3CNewMeshError%3E-for-Error"]]}],\
["metis_sys",{"doc":"","t":"HHHHHSHHHHHHHHSSSIISSISSSSSSSSSSISSISSSSSISSSISSSSSSSSSSSSSSSSSSSSSSSSSSSSSSISSSISSISSSSIISSSS","n":["METIS_CacheFriendlyReordering","METIS_ComputeVertexSeparator","METIS_Free","METIS_MeshToDual","METIS_MeshToNodal","METIS_NOPTIONS","METIS_NodeND","METIS_NodeNDP","METIS_NodeRefine","METIS_PartGraphKway","METIS_PartGraphRecursive","METIS_PartMeshDual","METIS_PartMeshNodal","METIS_SetDefaultOptions","METIS_VER_MAJOR","METIS_VER_MINOR","METIS_VER_SUBMINOR","idx_t","mctype_et","mctype_et_METIS_CTYPE_RM","mctype_et_METIS_CTYPE_SHEM","mdbglvl_et","mdbglvl_et_METIS_DBG_COARSEN","mdbglvl_et_METIS_DBG_CONNINFO","mdbglvl_et_METIS_DBG_CONTIGINFO","mdbglvl_et_METIS_DBG_INFO","mdbglvl_et_METIS_DBG_IPART","mdbglvl_et_METIS_DBG_MEMORY","mdbglvl_et_METIS_DBG_MOVEINFO","mdbglvl_et_METIS_DBG_REFINE","mdbglvl_et_METIS_DBG_SEPINFO","mdbglvl_et_METIS_DBG_TIME","mgtype_et","mgtype_et_METIS_GTYPE_DUAL","mgtype_et_METIS_GTYPE_NODAL","miptype_et","miptype_et_METIS_IPTYPE_EDGE","miptype_et_METIS_IPTYPE_GROW","miptype_et_METIS_IPTYPE_METISRB","miptype_et_METIS_IPTYPE_NODE","miptype_et_METIS_IPTYPE_RANDOM","mobjtype_et","mobjtype_et_METIS_OBJTYPE_CUT","mobjtype_et_METIS_OBJTYPE_NODE","mobjtype_et_METIS_OBJTYPE_VOL","moptions_et","moptions_et_METIS_OPTION_BALANCE","moptions_et_METIS_OPTION_CCORDER","moptions_et_METIS_OPTION_COMPRESS","moptions_et_METIS_OPTION_CONTIG","moptions_et_METIS_OPTION_CTYPE","moptions_et_METIS_OPTION_DBGLVL","moptions_et_METIS_OPTION_DROPEDGES","moptions_et_METIS_OPTION_FAST","moptions_et_METIS_OPTION_GTYPE","moptions_et_METIS_OPTION_HELP","moptions_et_METIS_OPTION_IPTYPE","moptions_et_METIS_OPTION_MINCONN","moptions_et_METIS_OPTION_NCOMMON","moptions_et_METIS_OPTION_NCUTS","moptions_et_METIS_OPTION_NIPARTS","moptions_et_METIS_OPTION_NITER","moptions_et_METIS_OPTION_NO2HOP","moptions_et_METIS_OPTION_NOOUTPUT","moptions_et_METIS_OPTION_NSEPS","moptions_et_METIS_OPTION_NUMBERING","moptions_et_METIS_OPTION_OBJTYPE","moptions_et_METIS_OPTION_ONDISK","moptions_et_METIS_OPTION_PFACTOR","moptions_et_METIS_OPTION_PTYPE","moptions_et_METIS_OPTION_RTYPE","moptions_et_METIS_OPTION_SEED","moptions_et_METIS_OPTION_TPWGTS","moptions_et_METIS_OPTION_TWOHOP","moptions_et_METIS_OPTION_UBVEC","moptions_et_METIS_OPTION_UFACTOR","moptype_et","moptype_et_METIS_OP_KMETIS","moptype_et_METIS_OP_OMETIS","moptype_et_METIS_OP_PMETIS","mptype_et","mptype_et_METIS_PTYPE_KWAY","mptype_et_METIS_PTYPE_RB","mrtype_et","mrtype_et_METIS_RTYPE_FM","mrtype_et_METIS_RTYPE_GREEDY","mrtype_et_METIS_RTYPE_SEP1SIDED","mrtype_et_METIS_RTYPE_SEP2SIDED","real_t","rstatus_et","rstatus_et_METIS_ERROR","rstatus_et_METIS_ERROR_INPUT","rstatus_et_METIS_ERROR_MEMORY","rstatus_et_METIS_OK"],"q":[[0,"metis_sys"]],"d":["","","","","","","","","","","","","","","","","","","Coarsening Schemes","","","Debug Levels","&lt; Show the coarsening progress","&lt; Show info on minimization of subdomain connectivity","&lt; Show info on elimination of connected components","&lt; Shows various diagnostic messages","&lt; Show info on initial partitioning","&lt; Show info related to wspace allocation","&lt; Show info on vertex moves during refinement","&lt; Show the refinement progress","&lt; Show info on vertex moves during sep refinement","&lt; Perform timing analysis","Graph types for meshes","","","Initial partitioning schemes","","","","","","","","","","Options codes (i.e., options[])","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Operation type codes","","","","Partitioning Schemes","","","Refinement schemes","","","","","","Return codes","&lt; Some other errors","&lt; Returned due to erroneous inputs and/or options","&lt; Returned due to insufficient memory","&lt; Returned normally"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[],"b":[]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
